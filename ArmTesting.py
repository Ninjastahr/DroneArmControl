import maestro
import time
from Constants import *

joint = maestro.Controller()

joint.setRange(CONST_BASE_CHANNEL, CONST_BASE_MIN_PWM, CONST_BASE_MAX_PWM)
joint.setRange(CONST_JOINT_1_CHANNEL, CONST_JOINT_1_MIN_PWM, CONST_JOINT_1_MAX_PWM)
joint.setRange(CONST_JOINT_2_CHANNEL, CONST_JOINT_2_MIN_PWM, CONST_JOINT_2_MAX_PWM)
joint.setRange(CONST_JOINT_3_CHANNEL, CONST_JOINT_3_MIN_PWM, CONST_JOINT_3_MAX_PWM)
joint.setRange(CONST_GRIPPER_CHANNEL, CONST_GRIPPER_MIN_PWM, CONST_GRIPPER_MAX_PWM)

def AnglePWM(inputAngle, min, max, maxAngle):
    return inputAngle * ((max - min) / maxAngle) + min

baseSwivel = AnglePWM(CONST_BASE_ANGLE_START, CONST_BASE_MIN_PWM, CONST_BASE_MAX_PWM, CONST_BASE_MAX_ANGLE)
joint1 = AnglePWM(CONST_JOINT_1_ANGLE_START, CONST_JOINT_1_MIN_PWM, CONST_JOINT_1_MAX_PWM, CONST_JOINT_1_MAX_ANGLE)
joint2 = AnglePWM(CONST_JOINT_2_ANGLE_START, CONST_JOINT_2_MIN_PWM, CONST_JOINT_2_MAX_PWM, CONST_JOINT_2_MAX_ANGLE)
joint3 = AnglePWM(CONST_JOINT_3_ANGLE_START, CONST_JOINT_3_MIN_PWM, CONST_JOINT_3_MAX_PWM, CONST_JOINT_3_MAX_ANGLE)
gripper = AnglePWM(CONST_GRIPPER_ANGLE_START, CONST_GRIPPER_MIN_PWM, CONST_GRIPPER_MAX_PWM, CONST_GRIPPER_MAX_ANGLE)

def GoToPos(channel, speed, angle):
    joint.setTarget(channel, angle)
    joint.setAccel(channel, speed)

GoToPos(CONST_BASE_CHANNEL, CONST_BASE_SPEED, baseSwivel)
GoToPos(CONST_JOINT_1_CHANNEL, CONST_JOINT_1_SPEED, joint1)
GoToPos(CONST_JOINT_2_CHANNEL, CONST_JOINT_2_SPEED, joint2)
GoToPos(CONST_JOINT_3_CHANNEL, CONST_JOINT_3_SPEED, joint3)
GoToPos(CONST_GRIPPER_CHANNEL, CONST_GRIPPER_SPEED, gripper)

joint.close()